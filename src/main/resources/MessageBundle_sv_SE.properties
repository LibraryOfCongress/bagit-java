#X-Generator: crowdin.com
#default is English, United States (en_US). This is used to store all messages in bagit-java

#for BagitProfileDeserializer.java
fetch_allowed=\u00c4r fetch-filer till\u00e5tna? [{}]
serialization_allowed=Serialisering \u00e4r\: [{}]
parsing_bagit_profile_info_section=Parsar Bagit-Profile-Info sektionen
identifier=Identifierare \u00e4r [{}]
source_organization=Source-Organization \u00e4r [{}]
contact_name=Contact-Name \u00e4r [{}]
contact_email=Contact-Email \u00e4r [{}]
external_description=External-Description \u00e4r [{}]
version=Version \u00e4r [{}]
parsing_bag_info=Parsar Bagit-Profile-Info sektionen
required_manifest_types=Obligatoriska manifest-typer {}
acceptable_serialization_mime_types=Accepterade MIME-typer f\u00f6r serialisering \u00e4r {}
required_tagmanifest_types=Obligatoriska Tag-manifest-typer \u00e4r {}
tag_files_required=Obligatoriska Tag-filer \u00e4r {}
acceptable_bagit_versions=Accepterade bagit-versioner \u00e4r {}

#for BagitWarning.java
bag_within_a_bag=En datakatalog kan inneh\u00e5lla vad som helst, \u00e4ven en annan bag. Det \u00e4r emmelertid b\u00e4ttre att sammanfoga dem.
different_case=Bagen inneh\u00e5ller tv\u00e5 filer som endast skiljer sig skiftl\u00e4ge. Detta kan orsaka problem med filsystem likt de som anv\u00e4nds av apple(HFS).
different_normalization=Bagen inneh\u00e5ller tv\u00e5 filer som endast skiljer sig \u00e5t i normalisering. Detta kan orsaka att verifieringen misslyckas p\u00e5 vissa system, och skapa allm\u00e4n f\u00f6rvirring hos anv\u00e4ndarna.
extra_lines_in_bagit_files=Bagit-specifikationen s\u00e4ger att den m\u00e5ste inneh\u00e5lla 2 rader. Vissa implementeringar har emellertid valt att ignorera detta vilket kan orsaka kompatibilitetsproblem
leading_dot_slash=Ett manifest listar alla datafiler som relativa till bagens rotkatalog, det \u00e4r \u00f6verfl\u00f6digt att specificera det med en punkt.
non_standard_algorithm=Kontrollsumma-algoritmen som anv\u00e4nds \u00e4r inte en del av Javas standardexekvering. \u00d6verv\u00e4g att anv\u00e4nda SHA-512 ist\u00e4llet.
md5sum_tool_generated_manifest=Manifestet skapades med hj\u00e4lp av verktyg f\u00f6r kontrollsummahantering s\u00e5som de som ing\u00e5r i GNU Coreutils package (md5sum, sha1sum, etc.), h\u00e4r gemensamt refererat till 'md5sum'. Detta skapar sm\u00e5 skillnader i genererade manifest vilket kan skapa problem i vissa implementationer.
missing_tag_manifest=Tag-manifestet skyddar mot ett styckat payload-manifest. Det rekommenderas att alltid inkludera det.
old_bagit_version=Versionen av bagit-specifikationen \u00e4r inte den senaste. \u00d6verv\u00e4g att konvertera till den senaste versionen.
os_specific_files=Filer skapade av operativsystemet (OS) f\u00f6r dess egen skull. Dessa fungerar inte i alla OS-versioner och ska inte inkluderas i n\u00e5got manifest. Exempel\: Thumbs.db eller .DS_Store i OS X
payload_oxum_missing=Det rekommenderas att alltid inkludera Payload-Oxum i bagens metadata eftersom det m\u00f6jligg\u00f6r en 'snabbverifiering' av bagen.
tag_files_encoding=Det rekommenderas att alltid anv\u00e4nda UTF-8.
weak_checksum_algorithm=Algoritmen f\u00f6r checksumman \u00e4r bristf\u00e4llig. Vi rekommenderar anv\u00e4ndning av SHA-512.
manifest_file_sets_differ_between_algorithms=Fr\u00e5n och med bagit version 1.0 \u00e4r det rekommenderat att samtliga payload-manifest inneh\u00e5ller samma upps\u00e4ttning filer som i andra payload-manifest. Det \u00e4r ocks\u00e5 rekommenderat att alla tag-manifest inneh\u00e5ller samma upps\u00e4ttning filer som i andra tag-manifest.

#for BagLinter.java
checking_encoding_problems=Letar efter kodproblem.
checking_latest_version=Letar efter senaste versionen.
checking_manifest_problems=Letar efter problem i manifesten.
checking_metadata_problems=Letar efter problem i bag-metadatan.
skipping_check_extra_lines=Hoppar \u00f6ver kontroll efter extra rader i bagit-filer.
checking_extra_lines=Kontrollerar om [{}] inneh\u00e5ller mer \u00e4n 2 rader.
extra_lines_warning=Bagit-specifikationen anger att filen bagit.txt m\u00e5ste best\u00e5 av exakt 2 rader. Vi uppt\u00e4ckte emellertid [{}] rader, vissa implementationer ignorerar detta men det kan orsaka kompatiblitetsproblem med andra verktyg.

#for BagProfileChecker.java
checking_fetch_file_allowed=Kontrollerar om fetch-filen \u00e4r till\u00e5ten f\u00f6r bagen [{}].
checking_metadata_entry_required=Kontrollerar om [{}] kr\u00e4vs i bag-metadatan.
check_values_acceptable=Kontrollerar om samtliga v\u00e4rden angivna f\u00f6r [{}] \u00e4r godtagbara.
check_required_manifests_present=Kontrollerar om samtliga obligatoriska manifest finns.
required_tag_manifest_type_not_present=Den obligatoriska tag-manifest-typen [{}] fanns inte. 
required_manifest_type_not_present=Den obligatoriska manifest-typen [{}] fanns inte. 
checking_required_tag_file_exists=Kontrollerar om alla obligatoriska m\u00e4rkfiler finns.

#for BagitVersionIsNotAcceptableException.java
bagit_version_not_acceptable_error=Version [{}] finns inte i listan \u00f6ver accepterad versioner {}.

#for RequiredMetadataFieldNotPresentException.java
required_metadata_field_not_present_error=Profilen anger att metadataf\u00e4ltet [{}} \u00e4r obligatoriskt men det kunde inte hittas\!

#for FetchFileNotAllowedException.java
fetch_file_not_allowed_error=Fetch-filen kunde inte hittas i bag [{}]\!

#for MetadataValueIsNotAcceptableException.java
metadata_value_not_acceptable_error=Profilen specificerar att accepterade v\u00e4rden f\u00f6r [{}] \u00e4r {} hittade ist\u00e4llet [{}]\!

#for MetadataValueIsNotRepeatableException.java
metadata_value_not_repeatable_error=Profilen specificerar att v\u00e4rdet [{}] inte \u00e4r upprepningsbart men har angetts flera g\u00e5nger\!

#for RequiredTagFileNotPresentException.java
required_tag_file_not_found_error=Obligatorisk tag-fil [{}] kunde inte hittas\!

#for EncodingChecker.java
tag_files_not_encoded_with_utf8_warning=Tag-filer \u00e4r kodade med [{}]. Vi rekommenderar att ist\u00e4llet alltid anv\u00e4nda UTF-8.

#For ManifestChecker.java
bag_missing_tag_manifest_warning=Bagen[{}] inneh\u00e5ller inget tag-manifest. Det \u00e4r alltid rekommenderat att inkludera ett tag-manifest.
different_case_warning=I manifestet [{}], \u00e4r s\u00f6kv\u00e4gen samma som en annan s\u00f6kv\u00e4g med undantag f\u00f6r skiftesl\u00e4ge. Detta kan skapa problem om bagen flyttas till ett filsystem som \u00e4r ok\u00e4nsligt f\u00f6r skiftesl\u00e4ge.
manifest_line_violated_spec_error=Manifestet inneh\u00e5ller raden [{}] vilket inte f\u00f6ljer konventionen <CHECKSUM><PATH>
md5sum_generated_line_warning=S\u00f6kv\u00e4gen b\u00f6rjar med ett *, vilket inneb\u00e4r att det genererades med ett annat verktyg \u00e4n bagit. Det rekommenderas att ta bort * f\u00f6r att m\u00f6ta kraven i bagit-specifikationen.
cannot_access_parent_path_error=Kunde inte f\u00e5 \u00e5tkomst till \u00f6verordnad katalog [{}].
different_normalization_in_manifest_warning=Filen [{}] har en annan normalisering \u00e4n vad som \u00e4r specificerat i manifestet.
bag_within_bag_warning=Det \u00e4r en stark rekommendation att inte lagra en bag inom en bag d\u00e5 det \u00e4r k\u00e4nt att skapa problem.
leading_dot_slash_warning=I manifestet [{}] rad [{}] \u00e4r en icke-normaliserad s\u00f6kv\u00e4g.
os_specific_files_warning=I manifestet [{}] rad [{}] inneh\u00e5ller en fil specifik f\u00f6r operativsystemet.
weak_algorithm_warning=Uppt\u00e4ckte en k\u00e4nt svag algoritm [{}]. Med de fantastiska framstegen inom h\u00e5rdvaruutveckling kostar det inte mycket att anv\u00e4nda fler bits f\u00f6r att ber\u00e4kna kontrollsumman.
non_standard_algorithm_warning=Uppt\u00e4ckte algoritm [{}] som inte ing\u00e5r som standard i Java. Detta kommer att g\u00f6ra det sv\u00e5rare att l\u00e4sa denna bag p\u00e5 vissa system. \u00d6verv\u00e4ga att \u00e4ndra det till SHA-512.
manifest_fileset_differ=Manifestet [{}] inneh\u00e5ller inte samma upps\u00e4ttning filer som manifestet [{}], det rekommenderas att de \u00e4r likalydande.

#for MetadataChecker.java
missing_payload_oxum_warning=Payload-Oxum-nyckel hittades inte i bag-metadatan. Detta f\u00f6rhindrar en "snabbverifiering".

#for VersionChecker.java
old_version_warning=Hittade version [{}] av bagit-specifikationen men den senaste versionen \u00e4r [{}].

#for AbstractCreateManifestVistor
skipping_hidden_file=Hoppar \u00f6ver [{}] eftersom vi ignorerar dolda filer.
skipping_ignored_directory=Hoppar \u00f6ver [{}] eftersom vi ignorerar dolda kataloger.

#for BagCreator.java
creating_bag=Skapar en bag med version\: [{}] i katalog\: [{}].
creating_payload_manifests=Skapar payload-manifest(en).
creating_tag_manifests=Skapar tag-manifest(en).
calculating_payload_oxum=Ber\u00e4knar payload-oxum p\u00e5 datakatalogen [{}].
creating_metadata_file=Skapar bag-metadatafil (bag-info.txt eller package-info.txt).

#for Hasher.java
adding_checksum=L\u00e4gger till [{}] i manifest med hashv\u00e4rde [{}].

#for UnsupportedAlgorithmException.java
algorithm_not_supported_error=[{}] st\u00f6ds inte\!

#for BagitTextFileReader.java
reading_version_and_encoding=L\u00e4ser [{}] f\u00f6r att fastsl\u00e5 version och teckenkodning.
bagit_version=BagIt-Versionen \u00e4r [{}].
tag_file_encoding=Tag-File-Character-Encoding \u00e4r [{}].
invalid_bagit_text_file_error=bagit.txt M\u00c5STE inneh\u00e5lla posterna 'Bagit-Version' OCH 'Tag-File-Character-Encoding'\!
bom_present_error=Filen inneh\u00e5ller ett byteordningsm\u00e4rke (BOM), vilket inte \u00e4r till\u00e5tet i bagit-specifikationen\!
strict_only_two_lines_error=bagit.txt f\u00e5r endast inneh\u00e5lla 2 rader. Extra rader hittade\:[{}]
strict_first_line_error=Den f\u00f6rsta raden i bagit.txt m\u00e5ste f\u00f6lja m\u00f6nstret\: [BagIt-Version\: <M.N>]. Hittade [{}]. Se specifikationen f\u00f6r mer information.
strict_second_line_error=Den andra raden i bagit.txt m\u00e5ste f\u00f6lja m\u00f6nstret\: [Tag-File-Character-Encoding\: <ENCODING>].Hittade [{}]. Se specifikationen f\u00f6r mer information.

#for UnparsableVersionException.java
unparsable_version_error=Version m\u00e5ste vara i formatet MAJOR.MINOR men var [{}]\!

#for FetchReader.java
reading_fetch_file=F\u00f6rs\u00f6ker att l\u00e4sa [{}].
read_fetch_file_line=L\u00e4ser URL [{}] l\u00e4ngd [{}] s\u00f6kv\u00e4g [{}] fr\u00e5n fetch-file [{}].
invalid_fetch_file_line_error=Raden [{}] \u00e4r ogiltigt f\u00f6r fetch.txt. Varje rad m\u00e5ste ta utformas som <URL> <LENGTH> <FILENAME>.

#for KeyValueReader.java
read_key_value_line=Hittade nyckeln [{}] v\u00e4rde [{}] i filen [{}] med split regex [{}].
found_indented_line=Hittade en indragen rad - sl\u00e5r samman det med nyckel [{}].
malformed_key_value_line_error=Raden [{}] uppfyller inte kraven i Bagit-specifikatioenen f\u00f6r en bag-tag-file. Kanske t\u00e4nkte du identera den med ett blanksteg eller tabb? Eller s\u00e5 kanske du inte anv\u00e4nde ett kolon f\u00f6r att skilja nyckeln fr\u00e5n v\u00e4rdet? Det m\u00e5ste f\u00f6lja konventionen av <key>{}<value> eller om den forts\u00e4tter fr\u00e5n en annan rad identerad av blanksteg eller tabb.

#for ManifestReader.java
attempting_read_manifests=F\u00f6rs\u00f6ker hitta och l\u00e4sa manifest.
found_tagmanifest=Hittade tag-manifest [{}].
found_payload_manifest=Hittade payload-manifest [{}].
reading_manifest=L\u00e4ser manifest [{}].

#for MetadataReader.java
attempting_read_metadata=F\u00f6rs\u00f6ker l\u00e4sa bag-metadata-fil.
found_metadata_file=Hittade metadatafil [{}].

#for TagFileReader.java
removing_asterisk=St\u00f6tte p\u00e5 s\u00f6kv\u00e4g som skapats av ett annat verktyg \u00e4n bagit. Tar bort * fr\u00e5n s\u00f6kv\u00e4g. Var god ta bort all * fr\u00e5n manifest-filerna\!
blackslash_used_as_path_separator_error=[{}] \u00e4r ogiltig p\u00e5 grund av anv\u00e4ndningen av s\u00f6kv\u00e4gseparatorn [\\]\!
malicious_path_error=[{}] f\u00f6rs\u00f6ker f\u00e5 \u00e5tkomst till en fil utanf\u00f6r bagen\!
invalid_url_format_error=URL [{}] \u00e4r ogiltig\!

#for BagVerifier.java
checking_bag_is_valid=Kontrollerar om bagen med rotkatalogen [{}] validerar.
checking_payload_checksums=Kontrollerar payload-manifest(ens) kontrollsummor.
checking_tag_file_checksums=Kontrollerar tag-manifest(ens) kontrollsummor.
checksums_not_matching_error=[{}] fel intr\u00e4ffade. Minst ett av felen beror p\u00e5 att kontrollsummor inte \u00f6verensst\u00e4mmer.
checking_bag_is_complete=Kontrollerar om bagen med rotkatalog [{}] \u00e4r komplett.

#for CheckIfFileExistsTask.java
different_normalization_on_filesystem_warning=Filnamnet [{}] har en annan normalisering \u00e4n vad som finns i filsystemet\!
error_reading_normalized_file=Fel vid f\u00f6rs\u00f6k att l\u00e4sa [{}] f\u00f6r att se om n\u00e5gon fil i den katalogen matchar det normaliserade filnamnet [{}]\!

#for CheckManifestHashesTask.java
checking_checksums=Kontrollerar filen [{}] f\u00f6r att som om kontrollsumma matchar [{}].

#for CorruptChecksumException.java
corrupt_checksum_error=Filen [{}] f\u00f6rv\u00e4ntas ha f\u00f6ljande hashv\u00e4rde\: [{}] men ber\u00e4knades till [{}].

#for FileCoundAndTotalSizeVisitor.java
file_size_in_bytes=Filen [{}] har en storlek av [{}] bytes.

#for MandatoryVerifier.java
checking_fetch_items_exist=Kontrollerar om alla [{}] objekt i fetch.txt finns i katalogen [{}].
fetch_item_missing_error=Fetch-objektet [{}] har inte h\u00e4mtats\!
file_should_exist_error=Filen [{}] borde finnas med det g\u00f6r den inte\!
checking_payload_directory_exists=Kontrollerar om en s\u00e4rskild payload-katalog finns (endast f\u00f6r version 0.97 och tidigare).

#for MissingPayloadManifestException.java
missing_payload_manifest_error=Bagen inneh\u00e5ller inte en payload-manifest-fil\!

#for PayloadFileExistsInAllManifestsVistor.java
file_not_in_manifest_error=Filen [{}] finns i payload-katalogen men \u00e4r inte angiven i manifestet manifest-{}.txt\!
file_in_all_manifests=[{}] finns i alla manifest.
file_not_in_any_manifest_error=Filen [{}] finns i payload-katalogen men \u00e4r inte angiven i n\u00e5got manifest\!

#for PayloadVerifier.java
all_files_in_manifests=L\u00e4ser alla filer som anges i manifest(en).
get_listing_in_manifest=L\u00e4ser alla filer och kontrollsummor som anges i [{}].
check_all_files_in_manifests_exist=Kontollerar om alla filer som anges i manifest(en) finns.
missing_payload_files_error=Manifest(en) inneh\u00e5ller fil(er) {} men de finns inte\!
checking_file_in_at_least_one_manifest=Kontrollerar om alla payload-filer (filer i katalogen [{}]) \u00e4r uppr\u00e4knade i minst ett manifest.
checking_file_in_all_manifests=Kontrollerar om alla payload-filer (filer i katalogen [{}]) listas i samtliga manifest.

#for QuickVerifier.java
found_payload_oxum=Hittade Payload-Oxum [{}] f\u00f6r bag [{}].
payload_oxum_missing_error=Payload-Oxum finns inte i bagen\!
parse_size_in_bytes=Parsar [{}] f\u00f6r den totala bytestorleken av Payload Oxum.
parse_number_of_files=Parsar [{}] f\u00f6r antalet filer att hitta i payload-katalogen.
compare_payload_oxums=Medskickad payload-oxum\: [{}], Ber\u00e4knad Payload-Oxum\:[{}.{}], f\u00f6r payload-katalog [{}].
invalid_total_size_error=Ogiltlig total storlek. F\u00f6rv\u00e4ntade [{}] men ber\u00e4knade [{}]\!
invalid_file_cound_error=Ogiltig antal filer. F\u00f6rv\u00e4ntade [{}] men hittade [{}]\!

#for BagitFileWriter.java
write_bagit_file_to_path=Skriver bagit.txt till [{}]
writing_line_to_file=Skriver rad [{}] till [{}]

#for BagWriter.java
writing_payload_files=Skriver payload-filer.
upsert_payload_oxum=L\u00e4gger till/uppdaterar oxumchecksumma p\u00e5 inneh\u00e5ll.
writing_bagit_file=Skriver bagit.txt filen.
writing_payload_manifests=Skriver payload-manifest(en).
writing_bag_metadata=Skriver bag-metadatan.
writing_fetch_file=Skriver fetch-fil.
writing_tag_manifests=Skriver tag-manifest(en).

#for FetchWriter.java
writing_fetch_file_to_path=Skriver fetch.txt till [{}].

#for ManifestWriter.java
writing_manifest_to_path=Skriver manifest till [{}].

#for MetadataWriter.java
writing_metadata_to_path=Skriver bag-metadatafil [{}] till [{}].

#for PayloadWriter.java
writing_payload_file_to_path=Skriver payload-fil [{}] till [{}].
skip_fetch_item_when_writing_payload=Hoppar \u00f6ver payload-fil {} eftersom den finns i fetchlistan.

