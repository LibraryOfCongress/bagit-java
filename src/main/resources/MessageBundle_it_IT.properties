#X-Generator: crowdin.com
#default is English, United States (en_US). This is used to store all messages in bagit-java

#for BagitProfileDeserializer.java
fetch_allowed=Recupero file sono ammessi? [{}]
serialization_allowed=La serializzazione \u00e8\: [{}]
parsing_bagit_profile_info_section=Analisi della sezione BagIt-profilo-Info
identifier=Identificatore \u00e8 [{}]
source_organization=Organizzazione di origine \u00e8 [{}]
contact_name=Contatto-nome \u00e8 [{}]
contact_email=E-mail di contatto \u00e8 [{}]
external_description=Esterno-Descrizione \u00e8 [{}]
version=Versione \u00e8 [{}]
parsing_bag_info=Analisi della sezione di borsa-Info
required_manifest_types=Tipi di manifesto richiesto {}
acceptable_serialization_mime_types=Tipi MIME accettabili di serializzazione sono {}
required_tagmanifest_types=Required Tag Manifest types are {}
tag_files_required=Contrassegnare i file richiesti sono {}
acceptable_bagit_versions=Sono accettabili bagit versioni {}

#for BagitWarning.java
bag_within_a_bag=Una directory di dati pu\u00f2 contenere qualsiasi cosa, compreso un altro sacchetto. Tuttavia sarebbe meglio unire le borse.
different_case=La borsa contiene due file che differiscono solo nel caso. Questo pu\u00f2 causare problemi su un filesystem come quello utilizzato da apple (HFS).
different_normalization=La borsa contiene due file che differiscono solo per la normalizzazione. Ci\u00f2 pu\u00f2 causare verifica mancato su alcuni sistemi e la confusione generale dell'utente.
extra_lines_in_bagit_files=The Bagit specification says it must only contain 2 lines. However, some implementations have decided to ignore this which may cause compatibility issues
leading_dot_slash=Un manifesto elenca tutti i file di dati come relativo alla directory radice di borsa, \u00e8 superfluo specificarlo pertanto con un punto.
non_standard_algorithm=L'algoritmo di checksum utilizzato non vengono fornito con il runtime di Java. \u00c8 consigliabile utilizzare SHA-512.
md5sum_tool_generated_manifest=Il manifesto \u00e8 stato creato utilizzando l'utilit\u00e0 di checksum come quelli contenuti nel pacchetto GNU Coreutils (md5sum, sha1sum, ecc.), denominati collettivamente qui come 'md5sum'. Questo crea lievi differenze nei manifesti generati che possono causare problemi in alcune implementazioni.
missing_tag_manifest=The tag manifest guards against a truncated payload manifest as well as other potential problems and is always recommended that it be included.
old_bagit_version=The Bagit specification version is not the newest. Consider converting to the latest version.
os_specific_files=I file creati dal sistema operativo (OS) per il proprio usano. Essi sono non portabile tra versioni del sistema operativo e non devono essere inclusi in qualsiasi manifesto. Thumbs. DB esempi su Windows o. DS_Store su OS X
payload_oxum_missing=Si consiglia di includere sempre il Payload-Oxum nei metadati borsa poich\u00e9 permette per una verifica rapida del' della borsa.
tag_files_encoding=Si consiglia di utilizzare sempre UTF-8.
weak_checksum_algorithm=L'algoritmo di checksum utilizzato \u00e8 noto per essere debole. Raccomandiamo l'uso di SHA-512.
manifest_file_sets_differ_between_algorithms=As of bagit version 1.0 it is recommended that all payload manifests contain the same set of files as other payload manifests. It is also recommended that all tag manifests contain the same set of files as other tag manifests.

#for BagLinter.java
checking_encoding_problems=Controllo dei problemi di codifica.
checking_latest_version=Controllo della versione pi\u00f9 recente.
checking_manifest_problems=Il controllo si manifesta per problemi.
checking_metadata_problems=Verifica dei metadati della borsa per problemi.
skipping_check_extra_lines=Ignorare il controllo di linee extra nei file Bagit.
checking_extra_lines=Verifica se [{}] contiene pi\u00f9 di 2 righe.
extra_lines_warning=The Bagit specification states that the bagit.txt file must contain exactly 2 lines. However we found [{}] lines, some implementations will ignore this but may cause incompatibility issues with other tools.

#for BagProfileChecker.java
checking_fetch_file_allowed=Verifica se il file di recupero \u00e8 consentito per la borsa [{}].
checking_metadata_entry_required=Verifica se [{}] \u00e8 richiesto nei metadati della borsa.
check_values_acceptable=Verifica se tutti i valori elencati per [{}] sono accettabili.
check_required_manifests_present=Verifica se sono presenti tutti i manifesti richiesti.
required_tag_manifest_type_not_present=Il tipo manifest del tag richiesto [{}] non era presente. 
required_manifest_type_not_present=Il tipo manifest del tag richiesto [{}] non era presente. 
checking_required_tag_file_exists=Verifica se esistono tutti i tag file richiesti.

#for BagitVersionIsNotAcceptableException.java
bagit_version_not_acceptable_error=La versione [{}] non \u00e8 nell'elenco di {} accettabile.

#for RequiredMetadataFieldNotPresentException.java
required_metadata_field_not_present_error=Il profilo specifica il campo dei metadati [{}] \u00e8 richiesto ma non \u00e8 stato trovato\!

#for FetchFileNotAllowedException.java
fetch_file_not_allowed_error=Il file di recupero \u00e8 stato trovato nella borsa [{}]\!

#for MetadataValueIsNotAcceptableException.java
metadata_value_not_acceptable_error=Il profilo specifica che i valori accettabili per [{}] sono {} ma trovati [{}]\!

#for MetadataValueIsNotRepeatableException.java
metadata_value_not_repeatable_error=Il profilo specifica che il valore [{}] non \u00e8 ripetibile, ma \u00e8 stato elencato pi\u00f9 volte\!

#for RequiredTagFileNotPresentException.java
required_tag_file_not_found_error=Il file di tag richiesto [{}] non \u00e8 stato trovato\!

#for EncodingChecker.java
tag_files_not_encoded_with_utf8_warning=I file di tag sono codificati con [{}]. Raccomandiamo sempre di utilizzare UTF-8.

#For ManifestChecker.java
bag_missing_tag_manifest_warning=Bag [{}] does not contain a tag manifest. It is recommended to always include a tag manifest.
different_case_warning=Nel manifest [{}], il percorso [{}] \u00e8 uguale a un altro percorso, ad eccezione del caso. Questo pu\u00f2 causare problemi se si sposta la borsa in un file system che non fa distinzione tra maiuscole e minuscole.
manifest_line_violated_spec_error=Manifest contiene la riga [{}] che non segue la forma specificata di <CHECKSUM> <PERCORSO>
md5sum_generated_line_warning=Path [{}] starts with a *, which means it was generated with a non-bagit tool. It is recommended to remove the * in order to conform to the Bagit specification.
cannot_access_parent_path_error=Impossibile accedere alla cartella principale di [{}].
different_normalization_in_manifest_warning=Il file [{}] ha una diversa normalizzazione rispetto a quanto specificato nel manifest.
bag_within_bag_warning=We strongly recommend not storing a bag within a bag as it is known to cause problems.
leading_dot_slash_warning=In manifest [{}] line [{}] \u00e8 un percorso non normalizzato.
os_specific_files_warning=Nella riga manifest {{}] [{}] contiene un file specifico del sistema operativo.
weak_algorithm_warning=Rilevato un algoritmo debole noto [{}]. Con i grandi progressi nell'hardware dei computer, c'\u00e8 poco da fare per usare pi\u00f9 bit per calcolare il checksum.
non_standard_algorithm_warning=Algoritmo rilevato [{}] che non \u00e8 incluso di default in Java. Questo render\u00e0 pi\u00f9 difficile leggere questa borsa su alcuni sistemi. Prendi in considerazione la possibilit\u00e0 di cambiarlo in SHA-512.
manifest_fileset_differ=Manifest [{}] does not contain the same set of files as manifest [{}], it is recommended that they be the same.

#for MetadataChecker.java
missing_payload_oxum_warning=La chiave Payload-Oxum non \u00e8 stata trovata nei metadati della borsa. Ci\u00f2 impedir\u00e0 una "verifica rapida".

#for VersionChecker.java
old_version_warning=Found version [{}] of the Bagit specification but the latest version is [{}].

#for AbstractCreateManifestVistor
skipping_hidden_file=Salto [{}] poich\u00e9 ignoriamo i file nascosti.
skipping_ignored_directory=Salto [{}] poich\u00e9 ignoriamo le directory nascoste.

#for BagCreator.java
creating_bag=Creazione di una borsa con la versione\: [{}] nella directory\: [{}].
creating_payload_manifests=Creazione di manifest (e) payload.
creating_tag_manifests=Creazione di tag manifest (s).
calculating_payload_oxum=Calcolo dell'ossido di payload nella directory dei dati [{}].
creating_metadata_file=Creazione del file di metadati della borsa (bag-info.txt o package-info.txt).

#for Hasher.java
adding_checksum=Aggiunta di [{}] a manifest con l'hash [{}].

#for UnsupportedAlgorithmException.java
algorithm_not_supported_error=[{}] non \u00e8 supportato\!

#for BagitTextFileReader.java
reading_version_and_encoding=Lettura [{}] per versione e codifica.
bagit_version=BagIt-Versione \u00e8 [{}].
tag_file_encoding=La codifica dei caratteri del file tag \u00e8 [{}].
invalid_bagit_text_file_error=bagit.txt DEVE contenere voci "BagIt-Version" e "Tag-File-Character-Encoding"\!
bom_present_error=Il file [{}] contiene un byte order mark (BOM) che non \u00e8 consentito dalle specifiche bagit\!
strict_only_two_lines_error=Il file bagit.txt DEVE contenere solo 2 righe. Linee aggiuntive trovate\: [{}]
strict_first_line_error=The first line of the bagit.txt must follow the pattern of\: [BagIt-Version\: <M.N>]. But found instead [{}]. See the specification for more information.
strict_second_line_error=The second line of the bagit.txt must follow the pattern of\: [Tag-File-Character-Encoding\: <ENCODING>]. But found instead [{}]. See the specification for more information.

#for UnparsableVersionException.java
unparsable_version_error=La versione deve essere in formato MAGGIORE.MINORE ma era [{}]\!

#for FetchReader.java
reading_fetch_file=Tentativo di leggere [{}].
read_fetch_file_line=Leggi URL [{}] lunghezza [{}] percorso [{}] dal file di recupero [{}].
invalid_fetch_file_line_error=La linea [{}] non \u00e8 valida per fetch.txt. Ogni riga deve assumere la forma di <URL> <LUNGHEZZA> <NOME DEL FILE>.

#for KeyValueReader.java
read_key_value_line=Valore chiave [{}] trovato [{}] nel file [{}] utilizzando la regex divisa [{}].
found_indented_line=Trovato una linea rientrata - unendola con la chiave [{}].
malformed_key_value_line_error=Line [{}] does not meet the Bagit specification for a bag tag file. Perhaps you meant to indent it by a space or a tab? Or perhaps you didn't use a colon to separate the key from the value? It must follow the form of <key>{}<value> or if continuing from another line must be indented by a space or a tab.

#for ManifestReader.java
attempting_read_manifests=Tentativo di trovare e leggere manifesti.
found_tagmanifest=Trovato tag manifest [{}].
found_payload_manifest=Trovato manifest payload [{}].
reading_manifest=Lettura del manifest [{}].

#for MetadataReader.java
attempting_read_metadata=Tentativo di leggere il file dei metadati della borsa.
found_metadata_file=Trovato file di metadati [{}].

#for TagFileReader.java
removing_asterisk=Percorso incontrato creato dallo strumento non-bagit. Rimozione * dal percorso. Si prega di rimuovere tutti * dai file manifest\!
blackslash_used_as_path_separator_error=[{}] non \u00e8 valido a causa dell'uso del separatore di percorso [\\]\!
malicious_path_error=[{}] sta cercando di essere dannoso e accede a un file al di fuori della borsa\!
invalid_url_format_error=L'URL [{}] non \u00e8 valido\!

#for BagVerifier.java
checking_bag_is_valid=Verifica se il bag con la directory root [{}] \u00e8 valido.
checking_payload_checksums=Verifica dei checksum del manifest payload.
checking_tag_file_checksums=Controllo dei checksum del tag manifest (s).
checksums_not_matching_error=[{}] errors occurred. At least one of the errors is due to hashes not matching.
checking_bag_is_complete=Verifica se il bag con la directory root [{}] \u00e8 completo.

#for CheckIfFileExistsTask.java
different_normalization_on_filesystem_warning=Il nome file [{}] ha una diversa normalizzazione rispetto a ci\u00f2 che \u00e8 contenuto nel filesystem\!
error_reading_normalized_file=Errore durante il tentativo di leggere [{}] per vedere se tutti i file in quella directory corrispondono al nome file normalizzato di [{}]\!

#for CheckManifestHashesTask.java
checking_checksums=Verifica del file [{}] per verificare se il checksum corrisponde a [{}].

#for CorruptChecksumException.java
corrupt_checksum_error=Il file [{}] dovrebbe avere un [{}] hash di [{}] ma \u00e8 stato calcolato [{}].

#for FileCoundAndTotalSizeVisitor.java
file_size_in_bytes=Il file [{}] ha una dimensione di [{}] byte.

#for MandatoryVerifier.java
checking_fetch_items_exist=Verifica se tutti gli elementi [{}] in fetch.txt esistono nella directory [{}].
fetch_item_missing_error=L'elemento di recupero [{}] non \u00e8 stato recuperato\!
file_should_exist_error=Il file [{}] dovrebbe esistere ma non lo \u00e8\!
checking_payload_directory_exists=Verifica se esiste una directory di payload speciale (solo per la versione 0.97 e precedenti).

#for MissingPayloadManifestException.java
missing_payload_manifest_error=La borsa non contiene un file manifest payload\!

#for PayloadFileExistsInAllManifestsVistor.java
file_not_in_manifest_error=Il file [{}] si trova nella directory del payload ma non \u00e8 elencato nel manifest manifest - {}. Txt\!
file_in_all_manifests=[{}] \u00e8 in tutti i manifesti.
file_not_in_any_manifest_error=Il file [{}] si trova nella directory del payload ma non \u00e8 elencato in alcun manifest\!

#for PayloadVerifier.java
all_files_in_manifests=Ottenere tutti i file elencati nel manifest (s).
get_listing_in_manifest=Ottenere file e checksum elencati in [{}].
check_all_files_in_manifests_exist=Verifica se esistono tutti i file elencati nel manifest.
missing_payload_files_error=Manifest (s) contiene file (s) {} ma non esistono\!
checking_file_in_at_least_one_manifest=Verifica se tutti i file di payload (file nella directory [{}]) sono elencati in almeno un manifest.
checking_file_in_all_manifests=Verifica se tutti i file di payload (file nella directory [{}]) sono elencati in tutti i manifesti.

#for QuickVerifier.java
found_payload_oxum=Trovato Payload-Oxum [{}] per la borsa [{}].
payload_oxum_missing_error=Payload-Oxum non esiste in borsa\!
parse_size_in_bytes=Parsing [{}] for the total byte size of the Payload Oxum.
parse_number_of_files=Analisi [{}] per il numero di file da trovare nella directory del payload.
compare_payload_oxums=Supplied payload-oxum\: [{}], Calculated Payload-Oxum\: [{}.{}], for payload directory [{}].
invalid_total_size_error=Dimensione totale non valida. Previsto [{}] ma calcolato [{}]\!
invalid_file_cound_error=Conteggio file non valido. Previsto [{}] ma trovato [{}]\!

#for BagitFileWriter.java
write_bagit_file_to_path=Scrivi il file bagit.txt su [{}]
writing_line_to_file=Linea di scrittura [{}] a [{}]

#for BagWriter.java
writing_payload_files=Scrivere file di payload.
upsert_payload_oxum=Upserting Payload-Oxum.
writing_bagit_file=Scrivere il file bagit.txt.
writing_payload_manifests=Scrittura del manifest (i) carico (i).
writing_bag_metadata=Scrivere i metadati della borsa.
writing_fetch_file=Scrivere il file di recupero.
writing_tag_manifests=Scrivere i tag manifest (s).

#for FetchWriter.java
writing_fetch_file_to_path=Scrivi fetch.txt su [{}].

#for ManifestWriter.java
writing_manifest_to_path=Scrivi manifest su [{}].

#for MetadataWriter.java
writing_metadata_to_path=File di metadati della borsa da scrittura [{}] a [{}].

#for PayloadWriter.java
writing_payload_file_to_path=Scrittura del file del carico utile [{}] su [{}].
skip_fetch_item_when_writing_payload=Salto del file di payload {} perch\u00e9 si trova nell'elenco di recupero.

